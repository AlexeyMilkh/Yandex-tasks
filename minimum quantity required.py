"""В управляющий совет школы входят родители, учителя и учащиеся школы, причём родителей должно быть не менее одной
трети из общего числа членов совета. В настоящий момент в совет входит N человек, из них K родителей.
Определите, сколько родителей нужно дополнительно ввести в совет, чтобы их число стало составлять не менее трети от их
числа.

Решение: Будем искать минимальное количество родителей, которых нужно добавить, бинарным поиском. Не забываем, что новые
родители добавляются к общему числу членов совета. Не используем деление.
L = 0, R = N"""


def lbinsearch(l, r, check, checkparams):
    while l < r:  # поиск левой границы
        m = (l + r) // 2  # берем середину
        if check(m, checkparams):  # если условие check = True
            r = m  # то правая граница смещается влево
        else:  # если False
            l = m + 1  # то левая граница смещается вправо
    return l  # когда левая граница становится больше правой, значит, мы нашли искомое значение


def checkendownment(m, params):  # проверка условия check
    n, k = params  # параметры для проверки (общее количество человек и количество учителей)
    return (k + m) * 3 >= n + m  # проверяем check


checkparams = N, K = 145, 30
L, R = 0, N
print(lbinsearch(L, R, checkendownment, checkparams))

